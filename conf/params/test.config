// change these paths to lead to your files
params {
	riboseq_reads = "${HOME}/data/tests/*.gz"
    proteomics_reads = "${HOME}/data/tests/010_part10of10.mzML"
	other_RNAs_sequence = "${HOME}/data/tests/Mus_musculus_rDNA_complete_repeating_unit.fa"
    gtf = "${HOME}/data/tests/TEST_combined.gtf"
	genome = "${HOME}/data/tests/TEST_genome.fa"
	test_database = "${HOME}/data/tests/small_peptides_all_quad_samples.fasta"
}

// the following parameters are from the actual tools run by the pipeline
// only change these values if you know what you are doing
params {
    cut = 5
    minimum_length = 20
	clip_reads_args = "-v -n -l 20 -c -z -a AAAAAAAAAA"
	trim_reads_args = "-v -l 20 -t 20 -z"
	filter_reads_args = "-v -q 20 -p 90 -z"
    fastq_to_fasta_args = "-v -n -r"
	segemehl_args = "--silent --accuracy 90 --threads 25"
	star_threads = 24
    check_peridocitiy_codnum = 100
    ribotish_quality_args = "--th 0.4"
    ribotish_predict_args = "--longest" // or ""
	workspace = "${projectDir}/workspace"
	fragger_mode = "closed" // open/closed/nonspecific/glyco
    peptideprophet_args = "--combine --decoy rev_ --ppm --accmass --expectscore --decoyprobs --nonparam"
    philosopher_filter_args = "--psm 0.05 --ion 0.05 --pep 0.05 --prot 1 --picked --tag rev_"
}

// these paths can be changed if you want your output files to be stored elsewhere on your system
params {
    annotate_dir = "results/tests/annotate"
    riboseq_dir = "results/tests/riboseq"
    ribotish_dir = "results/tests/ribotish"
    philosopher_dir = "results/tests/philosopher"
    qc_dir = "results/tests/qc"
    map_dir = "results/tests/map"
    reads_dir = "results/tests/prepare_reads"
    log_dir = "logs/tests"
}

// do not change these params
params{
    run_mode = "test"
}
process {
    // controls the resources of the individual jobs
    memory = 8.GB
    cpus = 1
    clusterOptions = "--time=6:00:00 --qos=6hours"
    withLabel: mapping {
        memory = 8.GB
        cpus = 1
    }
    withLabel: indexing {
        memory = 8.GB
        cpus = 1
    }
    withLabel: predicting {
        memory = 8.GB
        cpus = 1
    }
    withLabel: fragger_heavy {
        memory = 8.GB
        cpus = 1
        params.fragger_ram = 8
        params.ionquant_ram = 8
    }
}
